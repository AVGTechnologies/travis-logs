#!/usr/bin/env ruby

require 'bundler/setup'
require 'travis'

$stdout.sync = true

Travis.config.log_level = :info
Travis::Database.connect
ActiveRecord::Base.logger.level = Logger::ERROR

Sidekiq.configure_client do |c|
  c.redis = { url: Travis.config.redis.url }
end

sql = "archived_at IS NULL AND archiving IS NULL AND created_at <= NOW() - interval '? seconds'"
interval = 60 * 60 * 24 * 30 * 3 # 3 months
count = (ARGV[0] || 1).to_i

logs = Artifact.where(sql, interval).order(:id).limit(count)
logs.update_all(archiving: true)

class Archiver; include Sidekiq::Worker; end

logs.each do |log|
  params = { type: 'log', id: log.id, job_id: log.job_id }
  Sidekiq::Client.push('queue' => 'archive_past', 'class' => Archiver, 'args' => [params])
end
